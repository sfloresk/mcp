[project]
name = "awslabs.aws-diagram-mcp-server"
version = "1.0.11"
description = "An MCP server that seamlessly creates diagrams using the Python diagrams package DSL"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "bandit>=1.8.6",
    "boto3>=1.40.53",
    "diagrams>=0.24.4",
    "mcp[cli]>=1.17.0",
    "pydantic>=2.12.2",
    "sarif-om>=1.0.4",
    "setuptools>=80.9.0",
    "starlette>=0.48.0",
    "urllib3>=2.5.0",
]
license = { text = "Apache-2.0" }
license-files = ["LICENSE", "NOTICE"]

authors = [
    { name = "Amazon Web Services" },
    { name = "AWSLabs MCP", email = "203918161+awslabs-mcp@users.noreply.github.com" },
]
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[project.scripts]
"awslabs.aws-diagram-mcp-server" = "awslabs.aws_diagram_mcp_server.server:main"

[project.urls]
Homepage = "https://awslabs.github.io/mcp/"
Documentation = "https://awslabs.github.io/mcp/servers/aws-diagram-mcp-server/"
Source = "https://github.com/awslabs/mcp.git"
"Bug Tracker" = "https://github.com/awslabs/mcp/issues"
Changelog = "https://github.com/awslabs/mcp/blob/main/src/aws-diagram-mcp-server/CHANGELOG.md"

[dependency-groups]
dev = [
    "commitizen>=4.9.1",
    "pre-commit>=4.2.0",
    "pyright>=1.1.406",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "ruff>=0.14.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
line-length = 99
extend-include = ["*.ipynb"]
exclude = [
    ".venv",
    "**/__pycache__",
    "**/node_modules",
    "**/dist",
    "**/build",
    "**/env",
    "**/.ruff_cache",
    "**/.venv",
    "**/.ipynb_checkpoints",
]
force-exclude = true

[tool.ruff.lint]
exclude = ["__init__.py"]
select = ["C", "D", "E", "F", "I", "W"]
ignore = ["C901", "E501", "E741", "F402", "F823", "D100", "D106"]

[tool.ruff.lint.isort]
lines-after-imports = 2
no-sections = true

[tool.ruff.lint.per-file-ignores]
"**/*.ipynb" = ["F704"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

[tool.pyright]
include = ["awslabs", "tests"]
exclude = [
    "**/__pycache__",
    "**/.venv",
    "**/node_modules",
    "**/dist",
    "**/build",
]
typeCheckingMode = "basic"
reportMissingImports = false
reportUnusedExpression = false
reportArgumentType = false
reportAttributeAccessIssue = false
reportPrivateUsage = false
reportUnknownMemberType = false
reportUnknownVariableType = false
reportUnknownArgumentType = false
reportGeneralTypeIssues = false

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.0.0"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version",
    "awslabs/aws_diagram_mcp_server/__init__.py:__version__",
]
update_changelog_on_bump = true

[tool.hatch.build.targets.wheel]
packages = ["awslabs"]

[tool.bandit]
# Skip specific issues
skips = ["B102"]
exclude_dirs = ["venv", "tests"]

# Per-file skips
per_file_skips = { "awslabs/aws_diagram_mcp_server/diagrams.py" = ["B102"] }

[tool.pytest.ini_options]
testpaths = "tests"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
markers = ["asyncio: mark a test as an asyncio coroutine"]
filterwarnings = [
    "ignore::DeprecationWarning:ast",
    "ignore:ast.Str is deprecated:DeprecationWarning",
    "ignore:ast.Num is deprecated:DeprecationWarning",
    "ignore:ast.NameConstant is deprecated:DeprecationWarning",
    "ignore:ast.Ellipsis is deprecated:DeprecationWarning",
    "ignore:Attribute s is deprecated:DeprecationWarning",
]

[tool.coverage.run]
source = ["awslabs"]
